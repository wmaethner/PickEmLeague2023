/* tslint:disable */
/* eslint-disable */
/**
 * Pick Em League Swagger
 * Welcome to the Swagger UI documentation site!
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ReleaseNotesSchema } from './ReleaseNotesSchema';
import {
    ReleaseNotesSchemaFromJSON,
    ReleaseNotesSchemaFromJSONTyped,
    ReleaseNotesSchemaToJSON,
} from './ReleaseNotesSchema';

/**
 * 
 * @export
 * @interface ReleaseNotesListModel
 */
export interface ReleaseNotesListModel {
    /**
     * 
     * @type {boolean}
     * @memberof ReleaseNotesListModel
     */
    success?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ReleaseNotesListModel
     */
    message?: string;
    /**
     * 
     * @type {Array<ReleaseNotesSchema>}
     * @memberof ReleaseNotesListModel
     */
    data?: Array<ReleaseNotesSchema>;
}

/**
 * Check if a given object implements the ReleaseNotesListModel interface.
 */
export function instanceOfReleaseNotesListModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReleaseNotesListModelFromJSON(json: any): ReleaseNotesListModel {
    return ReleaseNotesListModelFromJSONTyped(json, false);
}

export function ReleaseNotesListModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReleaseNotesListModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'success': !exists(json, 'success') ? undefined : json['success'],
        'message': !exists(json, 'message') ? undefined : json['message'],
        'data': !exists(json, 'data') ? undefined : ((json['data'] as Array<any>).map(ReleaseNotesSchemaFromJSON)),
    };
}

export function ReleaseNotesListModelToJSON(value?: ReleaseNotesListModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'success': value.success,
        'message': value.message,
        'data': value.data === undefined ? undefined : ((value.data as Array<any>).map(ReleaseNotesSchemaToJSON)),
    };
}

