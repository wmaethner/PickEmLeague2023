/* tslint:disable */
/* eslint-disable */
/**
 * Pick Em League Swagger
 * Welcome to the Swagger UI documentation site!
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { EntrySchema } from './EntrySchema';
import {
    EntrySchemaFromJSON,
    EntrySchemaFromJSONTyped,
    EntrySchemaToJSON,
} from './EntrySchema';

/**
 * 
 * @export
 * @interface ReleaseNotesSchema
 */
export interface ReleaseNotesSchema {
    /**
     * 
     * @type {number}
     * @memberof ReleaseNotesSchema
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ReleaseNotesSchema
     */
    title?: string;
    /**
     * 
     * @type {Date}
     * @memberof ReleaseNotesSchema
     */
    date?: Date;
    /**
     * 
     * @type {Array<EntrySchema>}
     * @memberof ReleaseNotesSchema
     */
    entries?: Array<EntrySchema>;
}

/**
 * Check if a given object implements the ReleaseNotesSchema interface.
 */
export function instanceOfReleaseNotesSchema(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReleaseNotesSchemaFromJSON(json: any): ReleaseNotesSchema {
    return ReleaseNotesSchemaFromJSONTyped(json, false);
}

export function ReleaseNotesSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReleaseNotesSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
        'entries': !exists(json, 'entries') ? undefined : ((json['entries'] as Array<any>).map(EntrySchemaFromJSON)),
    };
}

export function ReleaseNotesSchemaToJSON(value?: ReleaseNotesSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'title': value.title,
        'date': value.date === undefined ? undefined : (value.date.toISOString().substr(0,10)),
        'entries': value.entries === undefined ? undefined : ((value.entries as Array<any>).map(EntrySchemaToJSON)),
    };
}

