/* tslint:disable */
/* eslint-disable */
/**
 * Pick Em League Swagger
 * Welcome to the Swagger UI documentation site!
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { GameSchema } from './GameSchema';
import {
    GameSchemaFromJSON,
    GameSchemaFromJSONTyped,
    GameSchemaToJSON,
} from './GameSchema';
import type { UserSchema } from './UserSchema';
import {
    UserSchemaFromJSON,
    UserSchemaFromJSONTyped,
    UserSchemaToJSON,
} from './UserSchema';

/**
 * 
 * @export
 * @interface GamePickSchema
 */
export interface GamePickSchema {
    /**
     * 
     * @type {number}
     * @memberof GamePickSchema
     */
    id?: number;
    /**
     * 
     * @type {UserSchema}
     * @memberof GamePickSchema
     */
    user?: UserSchema;
    /**
     * 
     * @type {GameSchema}
     * @memberof GamePickSchema
     */
    game?: GameSchema;
    /**
     * 
     * @type {number}
     * @memberof GamePickSchema
     */
    pick?: number;
    /**
     * 
     * @type {number}
     * @memberof GamePickSchema
     */
    amount?: number;
}

/**
 * Check if a given object implements the GamePickSchema interface.
 */
export function instanceOfGamePickSchema(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function GamePickSchemaFromJSON(json: any): GamePickSchema {
    return GamePickSchemaFromJSONTyped(json, false);
}

export function GamePickSchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): GamePickSchema {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'user': !exists(json, 'user') ? undefined : UserSchemaFromJSON(json['user']),
        'game': !exists(json, 'game') ? undefined : GameSchemaFromJSON(json['game']),
        'pick': !exists(json, 'pick') ? undefined : json['pick'],
        'amount': !exists(json, 'amount') ? undefined : json['amount'],
    };
}

export function GamePickSchemaToJSON(value?: GamePickSchema | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'user': UserSchemaToJSON(value.user),
        'game': GameSchemaToJSON(value.game),
        'pick': value.pick,
        'amount': value.amount,
    };
}

