/* tslint:disable */
/* eslint-disable */
/**
 * Pick Em League Swagger
 * Welcome to the Swagger UI documentation site!
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GamePickModel,
} from '../models';
import {
    GamePickModelFromJSON,
    GamePickModelToJSON,
} from '../models';

export interface GetGamePicksByUserAndWeekRequest {
    userId: string;
    week: string;
}

export interface GetGamePicksByWeekRequest {
    week: string;
}

/**
 * 
 */
export class GamePicksApi extends runtime.BaseAPI {

    /**
     * Retrieve a list of game picks
     */
    async getGamePickListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GamePickModel>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/game_picks`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GamePickModelFromJSON(jsonValue));
    }

    /**
     * Retrieve a list of game picks
     */
    async getGamePickList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GamePickModel> {
        const response = await this.getGamePickListRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async getGamePicksByUserAndWeekRaw(requestParameters: GetGamePicksByUserAndWeekRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GamePickModel>>> {
        if (requestParameters.userId === null || requestParameters.userId === undefined) {
            throw new runtime.RequiredError('userId','Required parameter requestParameters.userId was null or undefined when calling getGamePicksByUserAndWeek.');
        }

        if (requestParameters.week === null || requestParameters.week === undefined) {
            throw new runtime.RequiredError('week','Required parameter requestParameters.week was null or undefined when calling getGamePicksByUserAndWeek.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/game_picks/{week}/{user_id}`.replace(`{${"user_id"}}`, encodeURIComponent(String(requestParameters.userId))).replace(`{${"week"}}`, encodeURIComponent(String(requestParameters.week))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GamePickModelFromJSON));
    }

    /**
     */
    async getGamePicksByUserAndWeek(requestParameters: GetGamePicksByUserAndWeekRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GamePickModel>> {
        const response = await this.getGamePicksByUserAndWeekRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async getGamePicksByWeekRaw(requestParameters: GetGamePicksByWeekRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<GamePickModel>>> {
        if (requestParameters.week === null || requestParameters.week === undefined) {
            throw new runtime.RequiredError('week','Required parameter requestParameters.week was null or undefined when calling getGamePicksByWeek.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/game_picks/{week}`.replace(`{${"week"}}`, encodeURIComponent(String(requestParameters.week))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GamePickModelFromJSON));
    }

    /**
     */
    async getGamePicksByWeek(requestParameters: GetGamePicksByWeekRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<GamePickModel>> {
        const response = await this.getGamePicksByWeekRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
